[pytest]
# Pytest configuration file

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Test paths
testpaths = services tests

# Output options
addopts =
    # Verbose output
    -v
    # Show local variables in tracebacks
    -l
    # Show summary of all test outcomes
    -ra
    # Strict markers
    --strict-markers
    # Strict config
    --strict-config
    # Show warnings
    -W default
    # Coverage options
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    # Parallel execution (commented out by default)
    # -n auto
    # Timeout for tests
    --timeout=300
    # Show slowest tests
    --durations=10

# Markers for categorizing tests
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (require external services)
    e2e: End-to-end tests (full system)
    slow: Slow tests (> 5 seconds)
    performance: Performance and load tests
    smoke: Smoke tests (quick validation)
    regression: Regression tests
    security: Security tests
    skip_ci: Skip in CI environment
    requires_gpu: Requires GPU hardware
    requires_ollama: Requires Ollama service
    requires_qdrant: Requires Qdrant service

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Coverage options
[coverage:run]
source = .
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */venv/*
    */virtualenv/*
    */node_modules/*
    */build/*
    */dist/*
    */.eggs/*
    */setup.py

[coverage:report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod

[coverage:html]
directory = coverage/html

[coverage:xml]
output = coverage/coverage.xml
